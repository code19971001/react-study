<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>jsx语法小练习</title>
  <script src="https://cdn.staticfile.org/react/16.4.0/umd/react.development.js"></script>
  <script src="https://cdn.staticfile.org/react-dom/16.4.0/umd/react-dom.development.js"></script>
  <!-- 生产环境中不建议使用 -->
  <script src="https://cdn.staticfile.org/babel-standalone/6.26.0/babel.min.js"></script> 
 
</head>
<body>
  <div id="test"></div>
  <script type="text/babel">
  /**
   * {这里可以写js表达式，但是不可以写js语句}
   * 一定要区分：【js语句(代码)】与【js表达式】
   *    1.表达式：一个表达式会产生一个值，可以放在任何一个需要值的地方：
   *      1）a
   *      2）a+b
   *      3）demo(1)
   *      4）arr.map()
   *      5）function test(){}
   *    2.语句或者代码
   *      1）if(){}
   *      2）for()
   *      3）switch(){ }
   *         
   */
    //模拟一些数据：
    const data = ['Angular','React','Vue'];
    const data1= {'name1':'Angular','name2':'React','name3':'Vue'}
    //1.创建一个虚拟dom
    //写死的方式实现效果。
    const vDOM = (
      <div>
        <h2>前端js框架列表</h2>  
        <ul>
          <li>Angular</li>
          <li>React</li>
          <li>Vue</li>  
        </ul>
      </div>
    )
    //2.使用map来进行遍历。注意：key是一个唯一标识。
    const vDOM2 = (
      <div>
        <h2>前端JS框架列表</h2>
        <ul>
          {
            data.map((name,index) => <li key={index}>{name}</li>
            )
          }
        </ul>  
      </div>
    )

    //2.渲染虚拟dom到页面
    ReactDOM.render(
      vDOM2,
      document.getElementById('test')
    );

  </script>

</body>
</html>